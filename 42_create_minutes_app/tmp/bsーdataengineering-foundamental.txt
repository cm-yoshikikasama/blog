に貼ってあるので、参照いただければなと思います。
はい。
で、えっと、こちら、なんか結構オライリーのデータエンジニアリングの基礎の内容が、ま、自分的に刺さって、ま、紹介したいなと思って、結構抜粋しながら、あの、読んでたんですけど、ま、かなり 大量に長いことになったので、かなりスキップをしながら、はい、ちょっと話したい内容がある箇所だけ 説明したいなと思います。
はい。
で、えっと、全体的に11章ぐらいありまして、まず最初にデータエンジニアリングの概説から始まって、え、データエンジニアリングのライフサイクルっていうのがどういうものかっていうところと、あとは適切なデータアーキテクチャ設計が何なのか。
で、ま、この辺りは えっと、スキップをしていました。
で、8章では、ま、ちょっとデータモデリングについて、個人的に気になったので、それを取り上げるのと、最後にデータエンジニアリングの未来について、ま、少し かいつまんでお話できればなと思います。
大体12時13時30分まで、はい。話したいと思います。
はい。
そうですね。
こちらにも書いてあるんですけど、全てを理解できてるわけではないので、誤った解釈や別の視点があれば、ぜひ コメントお願いします。
で、えっと、この本については、ま、データエンジニアとして 働いてる人は全員読んでもいいかもと思いますけど、オライリーの386ページは他の本よりもかなり長く感じると思うので、ま、気になった章のみ 抜粋して読むのでもいいかなと思います。
で、えっと、こちらの本の、あの、原書が発売が2022年なので、生成AI前の話なので、そのあたりの記載はなかったですと。
で、目的としては、単純にいい本だったので、紹介と データエンジニアリングの概略の理解というところです。
はい。
で、えっと、まずまとめ的な私の最初の感想なんですけど データモデリングについて書かれてる所で、あの、 ちょっと分からなかったのですが、ま、石川さんのブログが 結構分かりやすくて、はい。
ちょっとこの辺りは参考にしながら読んでいましたと。
あとは、LLMが出て てからの、際が気になるっていうところで、これも石川さんのブログに記載があったので、はい。
こちらも読むことをお勧めしますと。
で、ま、ライブデータスタックっていうのが出てくるので、ま、それを学んでみたいなとか。
あとは、ま、このあたりのアーキテクチャについては細かく書かれてなかったので、あと理解したいなというところです。
はい。
で、えっと、参考文献とかは別途 貼ってあるので、ご確認いただければなと思います。
はい。
で、えっと、そうですね。
時間がないので、ぱぱっと いきます。
ま、まずはそもそもデータエンジニアリングとはというところで ま、全体的に統一された見解があるわけではないんですけど、本書では 以下のように定義をしていますと。
ま、データを取り込んで、下流の分析や機械学習などで利用しやすい高頻出で一貫性のある情報を生成するシステムとプロセスの開発、実装、維持、管理を意味しますと。
で、そういった中でデータエンジニアの役割は、データエンジニアリングライフサイクルを管理するエンジニアですと。
で、データエンジニアリングライフサイクルっていうのが何なのかって言うと、ソースシステムからのデータ取得に始まって、分析や機械学習などへのデータ提供に終わるというところです。
で、図としては、こちらになりますね。
ま、ソースから生成されて、で、取り込み、処理があって、変換があって、で、最後にアナリティクスであったり、機械学習であったり、リバースETLに提供するという 形です。
で、ま、これの中で、ま、全てストレージ保存とかしたりしてるので、ここで保存が囲ってあって で、ま、全体的な ま、そこのアーキテクチャとして、セキュリティ、データ管理、データオプス、あとはデータアーキテクチャ、オーケストレーション、ソフトウェアエンジニアリングがあるというのが、ま、こちらの キーの図になっています。
はい。
で、えっと、このあたりちょっと話す長くなので、ちょっと簡単な歴記なんですけど ま、1980年から2000年頃にDWHというものが、ビル・インモンさんによって使い始められましたと。
で、IBMのエンジニアが開発した、あの、リレーションデータベースとSQLが、オラクルによって普及されていますよというところです。
はい。
で、えっと、ビジネスロジックを正しく理解するために、ま、データモデリングの仕事とアプローチを開発したのが、このキンポールさんとインモンさんに なりますと。
はい。
これも後ほど出てきます。
で、2000年代初頭としては、ま、現代的なデータエンジニアリングの登場というところで、ま、データの爆発的な増加と同時期に、サーバーラム、え、ディスク、フラッシュドライブなどの汎用ハードウェアも安価になって、ま、またいくつかの革新的な技術により、大規模なコンピューティングクラスターでの分散計算とのデータアクセスが可能になったと。
ま、これがビッグデータ時代の到来となったと言われていますと。
はい。
で、ま、このあたりに、あの ま、マップリデュースであったり、アパッチハドゥープの開発があって、で、えっと、同じ頃にAmazonによる自社の爆発的なデータニーズに対応するために EC2であったり、S3、ダイナモDBなどの、え、処理構成要素を作り上げて、パブリッククラウドの時代になったというところです。
で、2000年代として、えっと、ま、ハドゥープのエコシステム システムの成長というものがあって、で、2020年代としては、えっと、トレンドは非集注化と、モジュール化と、あとマネージド、あとコードに抽象化されたツールと、モダンデータスタックとなっています。
で、ツールやワークフローが単純化されたので、データエンジニアは、これまでのビッグデータフレームワークのサイの実行ではなくて、セキュリティだったり、データ管理、データオプス、データアーキテクチャ、オーケストレーション、データライフ管理などのバリューチェンの上位に焦点を当てるようになったっていうのが、現状のトレンドかなと思ってます。
はい。
で、データ成熟度とデータエンジニアの、ま、役割というところで ま、データ成熟度っていうのが、組織全体でより高いデータ活用能力統合の度合いを指すというところです。
で、簡略した3つのステージで、データエンジニアが行うことを、え、まとめていますと。
ま、ちょっとこのあたりは長くなるので省略しますが、ま、データの使い始めについて は、このあたりの目標があって、で、ステージ2ではデータに伴い成長するというところで、 ま、このあたりでは、ま、データエンジニアとしてはデブオプスであったり、データオプスの導入とかがありますと。
で、最後の、え、ステージ3ではデータでリードするというところで え、自動化であったり、ま、データ管理ツール導入など、はい。
より大きなことに、え、携わることになるというところです。
はい。
で、えっと、データエンジニアと他の技術職というところで、少し抜粋をしています。
で、この中ではデータアーキテクトっていう書かれ方をしていまして ま、BS部で言う、SAチームとかの役割に近いのかなと思ってますと。
データアーキテクト、データエンジニアリングも高い抽象度、抽象度で作業して、組織のデータ管理の設計図を作成しますと。
で、技術職と非技術職の橋渡しをするような役割も担いますと。
で、データエンジニアと密接に協力して、組織のデータ管理をリードするような役割です。
で、主な職務としては、ま、全体的なデータアーキテクチャの設計であったり、あとはエンジニアリングの指導と支援。
あとポリシー作成とデータガバナンス、クラウド移行の設計。
え、データエンジニアとの関係であったりとかがありますと。
はい。
で、ま、このあたりは参考文献でして、はい。
で、2章に入りますと。
で、2章では、データエンジニアリングライフサイクルを生成、保存、取り込み、変換、提供の5つのステージに分けているので、ちょっと細かく説明してるような内容になっています。
で、生成では、えっと、ソースシステムの評価において、データエンジニアが考慮すべき重要な 点についての話がありますと。
はい。
データソースの特性であったり、生成速度 あとは、ま、データスキーマであったり、スキーマ変更への対応とか ですね。
はい。
このあたりを、ま、 観点として注意しましょうというところです。
で、保存についても、データエンジニアが考慮すべき点についてがまとめられています。
ま、スケーラビリティであったり SLAの満足であったり、メタデータの取得。
あとストレージの種類であったり、データガバナンスとかがありますと。
はい。
で、取り込みのフェーズですね。
取り込みについては、ま、ユースケースの明確化をきちんとしましょうというところと、え、システムの信頼性、データを生成して取り込むシステムの信頼性を確認して、必要な時にデータが利用可能であるかを確かめましょうというところです。
あとはアクセス頻度であったり、データフォーマット、あとはデータ変換についてが書かれていますと。
はい。
で、えっと、バッチ取り込みとストリーム取り込みの選択において考慮すべき事項としては、ま、リアルタイムの 対応が必要であるかとか、ま、ユースケースとメリットによっても変わってきますよというところと、ま、あとは コストがストリームファーストアプローチの が時間、お金、メンテナンス、ダウンタイム、機会費用などの面で、えっと、かかるところで書いてあったりしますと。
はい。
で、ま、全体的なここのまとめとしては、ストリーミングファーストは魅力的ですが、ま、依然としてバッチの方が適している場合も多くて、コストや 複雑さが増すことがあると。
で、真のリアルタイムストリーミングを採用するのは、バッチの使用に対するトレードオフを正当化できる明確なビジネスユースケースがある場合に限りますと。
で、現在はバッチ処理の方が圧倒的に良く使われていますが、えっと、ストリーム処理ソリューションが普及しつつあることと、あとはストリームデータ量が増えていることから、ストリーム変換の人気は 高まり続けていくつかの 領域では、バッチ処理に完全に取って変わるだろうという説があったりしました。
はい。
で、変換については はい。
ま、変換のコストとか、変換がサポートするビジネスルール、ま、データ変換はビジネスロジックを正確に反映しているか確認することが大事ですよというところです。
で、提供ですね。
はい。
で、提供の先としては、ま、アナリティクスとして、大きくビジネスアナリティクス、BIだとか、オペレーショナルアナリティクス、あと組み込みアナリティクス、あとリバースETLというものがありますと。
はい。
で、ビジネスアナリティクスについては、ま、実行可能な戦略的な意思決定を行うために、過去と現在のデータを使用していますと。
ま、ダッシュボードであったり、レポートの作成というところです。
で、オペレーショナルアナリティクス。
これはデータを使って即座に実行をするところで、ここでの本書の書き方では主に社内の運用効率と書いてありました。
で、例えば、在庫のライブビューや、ウェブサイトやアプリケーションの健全性を表示したり、リアルタイムのダッシュボードなどがありますと。
で、データはソースシステムから直接、もしくはストリームデータパイプラインからリアルタイムで反映されるというところが、ま、BIで分かることが異なるところです。
はい。
で、組み込みアナリティクス。
これは社会向けのアナリティクスというところで、多くのアプリケーションがデータで動くようになったので、エンドユーザーに対してのアプリ、アナリティクスを提供することが増えてるというところです。
はい。
で、多くの場合、アプリケーション自体に、え、アナリティクスダッシュボードが組み込まれているというところです。
で、リバースETLですね。
はい。
で、こちらはデータエンジニアリングライフサイクルで処理されたデータを、ソースシステムにフィードバックするプロセスですと。
で、これは長い間、アンチパターンとみなされていますが、実際には非常に有用で、必要な場合が多いですと。
はい。
ここの図でも書いてある通り、ま、最終的に提供として、またデータソースに戻るみたいな形ですね。
で、ま、具体的な例としては、マーケティングアナリスト、アナリティストがDWHのデータを使って、 MicrosoftのExcelで入手した単価を計算し、その入手した単価を、ま、GoogleのAdWordsにアップロードすることとかが挙げられますと。
ま、このプロセスは以前は手作業で行われていたんですが、現在は、え、このようなベンダーがリバースETLを実現するプロダクトを提供してますよというところですと。
はい。
ま、ソースシステムに データを戻せるところの必要がある場合は、ま、いくつかあってというところで、はい。
観点として書いてあります。
はい。
で、えっと、続いては、データエンジニアリングにおける主要なテールというところで、ここではデータオプスのみを紹介していますと。
で、データオプスっていうのがそもそも何なのかって言うと、アジャイル手法のベストプラクティスであるデブオプスと、え、統計的プロセス制御をデータに適用することとしていますと。
はい。
ま、デブオプスをデータに、データの処理に対して適用するっていうところですね。
で、大きな要素としては、自動化と、あとは監視と、観測とインシデント対応がありますと。
ま、自動化については、ま、CI CDを導入しての、えっと、自動化であったり変更管理、あとはコードによる構成管理などが、ま、メインとなってくるかなと思いますと。
で、観測と監視については ま、データは気付かないうちに間違ったデータとかがきますよっていうところ。
あとは、ま、システムの停止とかが起こるっていうところで、ま、そういったものに対しての ええと、観測と監視をしましょうねっていうところが書いてありますと。
ま、その1つとしてDODDメソッドって呼ばれる、データオブザビリティドリブンデベロップメントというところがあったりしますと。
ま、インシデント対応としては、えっと、データオプスを使って、迅速に新しいデータプロダクトを出荷しますが、ミスは避けられないので はい。
ま、それに対しての えっと、コミュニケーションであったり、問題の事前の発見ができるようにしましょうねっていうところが書いてあります。
はい。
ちょっとこの辺も長くなるので、大体省略していきますと。
全然時間がないな。
はい。
えっと、3章としては、えっと、適切なデータアーキテクチャを設計というところが ありますと。
で、データアーキテクチャっていうのがそもそも何なのかっていうと、エンタープライズアーキテクチャのサブセットとなっていますと。
はい。
ビジネスアーキテクチャ、テクニカルアーキテクチャ、アプリケーション、その中のデータアーキテクチャですと。
じゃ、エンタープライズアーキテクチャとは何かというところなんですけど、ま、これも、なんか色々いろんな言われ方がしていて、ま、ただ、これをまとめると本書では 企業内での変化に対応するシステム設計であり、ま、慎重なトレードオフの評価を伴う柔軟で可逆な決定によって 実現されるものと定義していますと。
この定義は、柔軟で可逆な決定、評価、管理、トレードオフの評価など、エンタープライズアーキテクチャの、え、本質的な要素を含んでいますと。
はい。
で、えっと、そういったエンタープライズアーキテクチャの中で、じゃあ実際にデータアーキテクチャ何かっていうのが、ま、これも色んな 話があって、で、この中での定義なんですけど この本書での定義は、データアーキテクチャは、企業の進化するデータへの要求をサポートするシステムの設計であり、トレードオフを慎重に評価した上での柔軟で可逆な決定を通じて実現されるとしていますと。
で、意識して おくべきデータアーキテクチャのもう1つの側面が えっと、オペレーショナルとテクニカルに分かれていますよというところです。
で、オペレーショナルっていうのは、ま、人のプロセス、え、テクノロジーに 関連して、何をしなければいけないかの機能要求を含みますと。
ま、データがどのビジネスプロセスに役立つかとか、組織はデータ品質をどのように管理するかとか、データが生成されてからクエリ可能になるまでのレイテシー要求はとかです。
で、テクニカルアーキテクチャについては、ま、実際の技術的なアーキテクチャ。
ま、1時間あたり10テラバイトのデータをソースデータベースからデータレイクに移動するにはどうしたらいいかというところがありますと。
はい。
で、良いアーキテクチャとは何なんだろうなっていうところで、はい。
この本では、この、9つですね。
を 原則として踏まえていますと。
で、1つ目が、共通のコンポーネントを賢く選択するというところと、あとは障害に備える。
スケーラビリティの設計、アーキテクチャはリーダーシップだ。
常に設計をし続ける。
疎結合システムを構築する。
可逆な決定をする。
あとはセキュリティを優先する。
フィンオプスを活用するというところです。
はい。
で、共通コンポーネントを賢く選択するっていうのは えっと オブジェクトストレージであったり、バージョン管理システムであったり、ま、観測性であったり監視とオーケストレーションシステムなどがありまして、ま、そういったシステムを賢く選択するっていうところ が、はい、ま、大事ですよっていうところが書いてありますと。
で、障害に備えるっていうのは、ま、可用性、信頼性とか、ま、RTO、RPOの設計とかが え、当てはまりますよっていうところです。
で、スケーラビリティについては、ま、スケールアップ、スケールダウンが、ま、できるシステムっていうのを設計しますよよというところですと。
で ま、アーキテクチャはリーダーシップだって言うのは、なんかこれはちょっと原則に 当てはまんのかなっていうのはあるんですけど、データアーキテクトの技術的な決定を行い、アーキテクチャの技術を知って、それらを効果的なリーダーシップとトレーニングを通じて普及する責任がありますよってとこで。
データアーキテクト、アーキテクトについての、ま、役割みたいなものが、原則の中に、はいっています。
はい。
で、ま、常に設計し続けるっていうところで、ま、既存の状態を維持するだけではなくて、ビジネスやテクノロジーの変化に応じて、常に新しいものを設計し続ける必要がありますよっていうところが書いてありますと。
で、えっと、6番として、疎結合システムを構築しましょうというところです。
で、疎結合であれば、各チームが他のチームに依存せずにテスト、デプロイ、変更を行えるように 設計 できるので、ま、そういったことであれば、ま、ほとんどコミュニケーション取らずに仕事を終わらせることができるよっていうところがありますと。
ま、ベゾスのAPI指令とかは、ま、有名な話ですよってところが書いてありました。
で、可逆な決定をするっていうところで、ま、データ環境は急速に変化するため 可逆っていうのは、ま、後戻りできるみたいなことですね。
が、重要ですと書いてありますと。
はい。
ま、これも有名な話なんですけど、ベゾス、ベゾスの可逆な決定を総方向ドアと表現したりしていますと。
はい。
これも記事があるので、興味あったら読んでください。
で、あとはセキュリティが大事ですよっていうところと、ま、フィンオプスを、え、活用しましょうっていうところが書いてあります。
ま、フィンオプスについては、ファイナンスとデブオプスを合わせた造語で、ま、クラウド上での、ま、財務管理を、コスト管理を徹底しましょうっていうところです。
はい。
ちょっと、あと5分しかないので、ちょっとこのあたりもスキップしますが、はい。
ま、結構モラ 的に書いてあるので、はい。
興味があれば見てくださいというところです。
はい。
ちょっと、この話スキップします。
データモデリングも多分無理だから、すいません。
さ。
ちょっと11章までスキップをします。
はい。
はい、11章、データエンジニアリングの未来というところで、データエンジニアリングのライフサイクルは消えないと書いてありますと。
はい。
で、企業がAIやMLのようなホットなものに移行する前に、データ 基盤を構築する必要があることに気付くようになり、データエンジニアリングの人気と重要性は高まり続けるだろうというところが 書いてありますと。
で、あとは、ま、ツールとかプラクティスが、ま、モダンデータスタックとかの普及によって、ま、シンプルになることで、バリューチェーンの上位、ま、組織の意思決定であったり価値創造などに移動し、より高度な業務に専念することになるかなと思います。
ま、高度な業務っていうのが、ま、単純なデータ収集や保存からデータ分析や意思決定支援への移行。
あとはインフラ構築やデータパイプライン管理からビジネスインサイトへの提供や、ま、戦略立案支援。
と、ルーチン作業の自動化により、より複雑な問題解決や革新的なソリューションの開発に注力するとかが挙げられますと。
えっと、そうですね。
あと複雑な 生態と、え 使いやすいデータツールっていうところで ま、このあたりのGoogle BigQueryであったり、スノーフレイク、あとAmazon EMRなどの、ま、データの競合であったり、あとはファイブトランとか、Airbyteなどの人気もあって ま、データエンジニアはビジネスを推進するための各企業の問題に集中できるようになりますよっていうところが書いてあったりしますと。
で、あとは大 企業的なデータエンジニアリングというものが普及しますよと書いてありますと。
で、ここで言う大企業っていうのが、ま、大企業はデータを使って行っている、ま、管理とか運用とかガバナンス、その他のことをデータ管理ツールなどを使い、ま、容易にできるようになるので、そういったエンジニアリングは普及しますよと書いてあります。
で、職種名と担当範囲は変化すると書いてありますと。
ま、データエンジニアが、これほどなんか ツールとかで、ま、色んなことができるようになったので、ま、職種が変わって、例えば、ま、従来のソフトウェアアプリケーションとアナリティクスを融合させた データアプリケーションの作成を、ま、データエンジニアがやったりだとか、そういうことも増えますよっていう記載ですね。
あとはモダンデータスタックからの脱却と、ライブデータスタックへの移行と書いてありますと。
ま、これは、そうですね。
著者の意見なんですけど、素直に言うと、モダンデータスタックはそれほどモダンではないと書いてありますと。
で、基本的に最新のクラウドやSaaSテクノロジーを使って、古いDWHのプラクティスを再パッケージ化したものに過ぎないと。
で、モダンデータスタックはクラウドデータウェアハウスのパラダイムに基づいて構築されているため、実態リアルタイムデータアプリケーションが持つ将来性と比較すると、いくつかの重大な制約がありますよと書いてありました。
本書の見解では、え、世界はデータレイクをベースとした内部分岐の分析から、次世代リアルタイムデータベースを用いて、ビジネス全体やアプリケーションをリアルタイムで支える方向へと進んでいると書いてありますと。
で、リアルタイムデータアプリケーションっていうのは何なのかっていうと、ま、例えば、TikTokであったり、Uberであったり、Googleのようなプロダクトでは、短い動画を見たりとか、乗り物や食事を注文したりを リアルタイムで高度なデータ処理とMLを ま、小さいレイテンシーで実行しているっていうところです。
で、この洗練された強力なテクノロジーも民主化されつつあるので、データの世界は間もなくライブになるよっていうところが書いてあります。
1分。
はい。
ちょっと このあたりもデータのアプリケーションについてが書いてあって、ま、最後に付録というところです。
すいません。
ちょっと、全然話せなかったんですけど、もう1回戻って、はい。
そうですね。
ま、感想としては、ま、データモデリング。
ちょっと今回話せなかったんですけど、石川さんのブログとかが分かりやすいんで見てくださいというところと、あとはLLMについても、石川さんのブログが書いてあったので分かりやすかったですよっていう紹介ですと。
あとはライブデータスタックってここで言うなんだろうなって。
AWSで言うと何だろうなっていうのが、ま、Kinesis系とか、アパッチカフカ、アパッチフリンクなのかなと思ってるので、このあたりも学んでみたいと思って います。
はい。
あとは紹介はできなかったんですけど、このあたりもちょっと引き続き学んでみたいなと思ってます。
ま、全体的にこの本は、ま、網羅的にデータエンジニアリングについて書いてあるので、はい。
興味があれば読んでみればいいかなと思います。
はい。
発表以上になります。
